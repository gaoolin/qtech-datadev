/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.qtech.mq.serializer;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class WbOlpRawDataRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2806991080560581490L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WbOlpRawDataRecord\",\"namespace\":\"com.qtech.mq.serializer\",\"fields\":[{\"name\":\"dt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"simId\",\"type\":\"string\"},{\"name\":\"mcId\",\"type\":\"string\"},{\"name\":\"lineNo\",\"type\":\"int\"},{\"name\":\"leadX\",\"type\":\"string\"},{\"name\":\"leadY\",\"type\":\"string\"},{\"name\":\"padX\",\"type\":\"string\"},{\"name\":\"padY\",\"type\":\"string\"},{\"name\":\"checkPort\",\"type\":\"int\"},{\"name\":\"piecesIndex\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<WbOlpRawDataRecord> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<WbOlpRawDataRecord> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<WbOlpRawDataRecord> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<WbOlpRawDataRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<WbOlpRawDataRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this WbOlpRawDataRecord to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a WbOlpRawDataRecord from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a WbOlpRawDataRecord instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static WbOlpRawDataRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.time.Instant dt;
  private java.lang.CharSequence simId;
  private java.lang.CharSequence mcId;
  private int lineNo;
  private java.lang.CharSequence leadX;
  private java.lang.CharSequence leadY;
  private java.lang.CharSequence padX;
  private java.lang.CharSequence padY;
  private int checkPort;
  private int piecesIndex;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public WbOlpRawDataRecord() {}

  /**
   * All-args constructor.
   * @param dt The new value for dt
   * @param simId The new value for simId
   * @param mcId The new value for mcId
   * @param lineNo The new value for lineNo
   * @param leadX The new value for leadX
   * @param leadY The new value for leadY
   * @param padX The new value for padX
   * @param padY The new value for padY
   * @param checkPort The new value for checkPort
   * @param piecesIndex The new value for piecesIndex
   */
  public WbOlpRawDataRecord(java.time.Instant dt, java.lang.CharSequence simId, java.lang.CharSequence mcId, java.lang.Integer lineNo, java.lang.CharSequence leadX, java.lang.CharSequence leadY, java.lang.CharSequence padX, java.lang.CharSequence padY, java.lang.Integer checkPort, java.lang.Integer piecesIndex) {
    this.dt = dt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.simId = simId;
    this.mcId = mcId;
    this.lineNo = lineNo;
    this.leadX = leadX;
    this.leadY = leadY;
    this.padX = padX;
    this.padY = padY;
    this.checkPort = checkPort;
    this.piecesIndex = piecesIndex;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return dt;
    case 1: return simId;
    case 2: return mcId;
    case 3: return lineNo;
    case 4: return leadX;
    case 5: return leadY;
    case 6: return padX;
    case 7: return padY;
    case 8: return checkPort;
    case 9: return piecesIndex;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: dt = (java.time.Instant)value$; break;
    case 1: simId = (java.lang.CharSequence)value$; break;
    case 2: mcId = (java.lang.CharSequence)value$; break;
    case 3: lineNo = (java.lang.Integer)value$; break;
    case 4: leadX = (java.lang.CharSequence)value$; break;
    case 5: leadY = (java.lang.CharSequence)value$; break;
    case 6: padX = (java.lang.CharSequence)value$; break;
    case 7: padY = (java.lang.CharSequence)value$; break;
    case 8: checkPort = (java.lang.Integer)value$; break;
    case 9: piecesIndex = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'dt' field.
   * @return The value of the 'dt' field.
   */
  public java.time.Instant getDt() {
    return dt;
  }


  /**
   * Sets the value of the 'dt' field.
   * @param value the value to set.
   */
  public void setDt(java.time.Instant value) {
    this.dt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'simId' field.
   * @return The value of the 'simId' field.
   */
  public java.lang.CharSequence getSimId() {
    return simId;
  }


  /**
   * Sets the value of the 'simId' field.
   * @param value the value to set.
   */
  public void setSimId(java.lang.CharSequence value) {
    this.simId = value;
  }

  /**
   * Gets the value of the 'mcId' field.
   * @return The value of the 'mcId' field.
   */
  public java.lang.CharSequence getMcId() {
    return mcId;
  }


  /**
   * Sets the value of the 'mcId' field.
   * @param value the value to set.
   */
  public void setMcId(java.lang.CharSequence value) {
    this.mcId = value;
  }

  /**
   * Gets the value of the 'lineNo' field.
   * @return The value of the 'lineNo' field.
   */
  public int getLineNo() {
    return lineNo;
  }


  /**
   * Sets the value of the 'lineNo' field.
   * @param value the value to set.
   */
  public void setLineNo(int value) {
    this.lineNo = value;
  }

  /**
   * Gets the value of the 'leadX' field.
   * @return The value of the 'leadX' field.
   */
  public java.lang.CharSequence getLeadX() {
    return leadX;
  }


  /**
   * Sets the value of the 'leadX' field.
   * @param value the value to set.
   */
  public void setLeadX(java.lang.CharSequence value) {
    this.leadX = value;
  }

  /**
   * Gets the value of the 'leadY' field.
   * @return The value of the 'leadY' field.
   */
  public java.lang.CharSequence getLeadY() {
    return leadY;
  }


  /**
   * Sets the value of the 'leadY' field.
   * @param value the value to set.
   */
  public void setLeadY(java.lang.CharSequence value) {
    this.leadY = value;
  }

  /**
   * Gets the value of the 'padX' field.
   * @return The value of the 'padX' field.
   */
  public java.lang.CharSequence getPadX() {
    return padX;
  }


  /**
   * Sets the value of the 'padX' field.
   * @param value the value to set.
   */
  public void setPadX(java.lang.CharSequence value) {
    this.padX = value;
  }

  /**
   * Gets the value of the 'padY' field.
   * @return The value of the 'padY' field.
   */
  public java.lang.CharSequence getPadY() {
    return padY;
  }


  /**
   * Sets the value of the 'padY' field.
   * @param value the value to set.
   */
  public void setPadY(java.lang.CharSequence value) {
    this.padY = value;
  }

  /**
   * Gets the value of the 'checkPort' field.
   * @return The value of the 'checkPort' field.
   */
  public int getCheckPort() {
    return checkPort;
  }


  /**
   * Sets the value of the 'checkPort' field.
   * @param value the value to set.
   */
  public void setCheckPort(int value) {
    this.checkPort = value;
  }

  /**
   * Gets the value of the 'piecesIndex' field.
   * @return The value of the 'piecesIndex' field.
   */
  public int getPiecesIndex() {
    return piecesIndex;
  }


  /**
   * Sets the value of the 'piecesIndex' field.
   * @param value the value to set.
   */
  public void setPiecesIndex(int value) {
    this.piecesIndex = value;
  }

  /**
   * Creates a new WbOlpRawDataRecord RecordBuilder.
   * @return A new WbOlpRawDataRecord RecordBuilder
   */
  public static com.qtech.mq.serializer.WbOlpRawDataRecord.Builder newBuilder() {
    return new com.qtech.mq.serializer.WbOlpRawDataRecord.Builder();
  }

  /**
   * Creates a new WbOlpRawDataRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new WbOlpRawDataRecord RecordBuilder
   */
  public static com.qtech.mq.serializer.WbOlpRawDataRecord.Builder newBuilder(com.qtech.mq.serializer.WbOlpRawDataRecord.Builder other) {
    if (other == null) {
      return new com.qtech.mq.serializer.WbOlpRawDataRecord.Builder();
    } else {
      return new com.qtech.mq.serializer.WbOlpRawDataRecord.Builder(other);
    }
  }

  /**
   * Creates a new WbOlpRawDataRecord RecordBuilder by copying an existing WbOlpRawDataRecord instance.
   * @param other The existing instance to copy.
   * @return A new WbOlpRawDataRecord RecordBuilder
   */
  public static com.qtech.mq.serializer.WbOlpRawDataRecord.Builder newBuilder(com.qtech.mq.serializer.WbOlpRawDataRecord other) {
    if (other == null) {
      return new com.qtech.mq.serializer.WbOlpRawDataRecord.Builder();
    } else {
      return new com.qtech.mq.serializer.WbOlpRawDataRecord.Builder(other);
    }
  }

  /**
   * RecordBuilder for WbOlpRawDataRecord instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WbOlpRawDataRecord>
    implements org.apache.avro.data.RecordBuilder<WbOlpRawDataRecord> {

    private java.time.Instant dt;
    private java.lang.CharSequence simId;
    private java.lang.CharSequence mcId;
    private int lineNo;
    private java.lang.CharSequence leadX;
    private java.lang.CharSequence leadY;
    private java.lang.CharSequence padX;
    private java.lang.CharSequence padY;
    private int checkPort;
    private int piecesIndex;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.qtech.mq.serializer.WbOlpRawDataRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.dt)) {
        this.dt = data().deepCopy(fields()[0].schema(), other.dt);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.simId)) {
        this.simId = data().deepCopy(fields()[1].schema(), other.simId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.mcId)) {
        this.mcId = data().deepCopy(fields()[2].schema(), other.mcId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.lineNo)) {
        this.lineNo = data().deepCopy(fields()[3].schema(), other.lineNo);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.leadX)) {
        this.leadX = data().deepCopy(fields()[4].schema(), other.leadX);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.leadY)) {
        this.leadY = data().deepCopy(fields()[5].schema(), other.leadY);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.padX)) {
        this.padX = data().deepCopy(fields()[6].schema(), other.padX);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.padY)) {
        this.padY = data().deepCopy(fields()[7].schema(), other.padY);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.checkPort)) {
        this.checkPort = data().deepCopy(fields()[8].schema(), other.checkPort);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.piecesIndex)) {
        this.piecesIndex = data().deepCopy(fields()[9].schema(), other.piecesIndex);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing WbOlpRawDataRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(com.qtech.mq.serializer.WbOlpRawDataRecord other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.dt)) {
        this.dt = data().deepCopy(fields()[0].schema(), other.dt);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.simId)) {
        this.simId = data().deepCopy(fields()[1].schema(), other.simId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mcId)) {
        this.mcId = data().deepCopy(fields()[2].schema(), other.mcId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lineNo)) {
        this.lineNo = data().deepCopy(fields()[3].schema(), other.lineNo);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.leadX)) {
        this.leadX = data().deepCopy(fields()[4].schema(), other.leadX);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.leadY)) {
        this.leadY = data().deepCopy(fields()[5].schema(), other.leadY);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.padX)) {
        this.padX = data().deepCopy(fields()[6].schema(), other.padX);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.padY)) {
        this.padY = data().deepCopy(fields()[7].schema(), other.padY);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.checkPort)) {
        this.checkPort = data().deepCopy(fields()[8].schema(), other.checkPort);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.piecesIndex)) {
        this.piecesIndex = data().deepCopy(fields()[9].schema(), other.piecesIndex);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'dt' field.
      * @return The value.
      */
    public java.time.Instant getDt() {
      return dt;
    }


    /**
      * Sets the value of the 'dt' field.
      * @param value The value of 'dt'.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder setDt(java.time.Instant value) {
      validate(fields()[0], value);
      this.dt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'dt' field has been set.
      * @return True if the 'dt' field has been set, false otherwise.
      */
    public boolean hasDt() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'dt' field.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder clearDt() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'simId' field.
      * @return The value.
      */
    public java.lang.CharSequence getSimId() {
      return simId;
    }


    /**
      * Sets the value of the 'simId' field.
      * @param value The value of 'simId'.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder setSimId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.simId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'simId' field has been set.
      * @return True if the 'simId' field has been set, false otherwise.
      */
    public boolean hasSimId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'simId' field.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder clearSimId() {
      simId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'mcId' field.
      * @return The value.
      */
    public java.lang.CharSequence getMcId() {
      return mcId;
    }


    /**
      * Sets the value of the 'mcId' field.
      * @param value The value of 'mcId'.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder setMcId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.mcId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'mcId' field has been set.
      * @return True if the 'mcId' field has been set, false otherwise.
      */
    public boolean hasMcId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'mcId' field.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder clearMcId() {
      mcId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'lineNo' field.
      * @return The value.
      */
    public int getLineNo() {
      return lineNo;
    }


    /**
      * Sets the value of the 'lineNo' field.
      * @param value The value of 'lineNo'.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder setLineNo(int value) {
      validate(fields()[3], value);
      this.lineNo = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'lineNo' field has been set.
      * @return True if the 'lineNo' field has been set, false otherwise.
      */
    public boolean hasLineNo() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'lineNo' field.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder clearLineNo() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'leadX' field.
      * @return The value.
      */
    public java.lang.CharSequence getLeadX() {
      return leadX;
    }


    /**
      * Sets the value of the 'leadX' field.
      * @param value The value of 'leadX'.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder setLeadX(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.leadX = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'leadX' field has been set.
      * @return True if the 'leadX' field has been set, false otherwise.
      */
    public boolean hasLeadX() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'leadX' field.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder clearLeadX() {
      leadX = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'leadY' field.
      * @return The value.
      */
    public java.lang.CharSequence getLeadY() {
      return leadY;
    }


    /**
      * Sets the value of the 'leadY' field.
      * @param value The value of 'leadY'.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder setLeadY(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.leadY = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'leadY' field has been set.
      * @return True if the 'leadY' field has been set, false otherwise.
      */
    public boolean hasLeadY() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'leadY' field.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder clearLeadY() {
      leadY = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'padX' field.
      * @return The value.
      */
    public java.lang.CharSequence getPadX() {
      return padX;
    }


    /**
      * Sets the value of the 'padX' field.
      * @param value The value of 'padX'.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder setPadX(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.padX = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'padX' field has been set.
      * @return True if the 'padX' field has been set, false otherwise.
      */
    public boolean hasPadX() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'padX' field.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder clearPadX() {
      padX = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'padY' field.
      * @return The value.
      */
    public java.lang.CharSequence getPadY() {
      return padY;
    }


    /**
      * Sets the value of the 'padY' field.
      * @param value The value of 'padY'.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder setPadY(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.padY = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'padY' field has been set.
      * @return True if the 'padY' field has been set, false otherwise.
      */
    public boolean hasPadY() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'padY' field.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder clearPadY() {
      padY = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'checkPort' field.
      * @return The value.
      */
    public int getCheckPort() {
      return checkPort;
    }


    /**
      * Sets the value of the 'checkPort' field.
      * @param value The value of 'checkPort'.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder setCheckPort(int value) {
      validate(fields()[8], value);
      this.checkPort = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'checkPort' field has been set.
      * @return True if the 'checkPort' field has been set, false otherwise.
      */
    public boolean hasCheckPort() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'checkPort' field.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder clearCheckPort() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'piecesIndex' field.
      * @return The value.
      */
    public int getPiecesIndex() {
      return piecesIndex;
    }


    /**
      * Sets the value of the 'piecesIndex' field.
      * @param value The value of 'piecesIndex'.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder setPiecesIndex(int value) {
      validate(fields()[9], value);
      this.piecesIndex = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'piecesIndex' field has been set.
      * @return True if the 'piecesIndex' field has been set, false otherwise.
      */
    public boolean hasPiecesIndex() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'piecesIndex' field.
      * @return This builder.
      */
    public com.qtech.mq.serializer.WbOlpRawDataRecord.Builder clearPiecesIndex() {
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public WbOlpRawDataRecord build() {
      try {
        WbOlpRawDataRecord record = new WbOlpRawDataRecord();
        record.dt = fieldSetFlags()[0] ? this.dt : (java.time.Instant) defaultValue(fields()[0]);
        record.simId = fieldSetFlags()[1] ? this.simId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.mcId = fieldSetFlags()[2] ? this.mcId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.lineNo = fieldSetFlags()[3] ? this.lineNo : (java.lang.Integer) defaultValue(fields()[3]);
        record.leadX = fieldSetFlags()[4] ? this.leadX : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.leadY = fieldSetFlags()[5] ? this.leadY : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.padX = fieldSetFlags()[6] ? this.padX : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.padY = fieldSetFlags()[7] ? this.padY : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.checkPort = fieldSetFlags()[8] ? this.checkPort : (java.lang.Integer) defaultValue(fields()[8]);
        record.piecesIndex = fieldSetFlags()[9] ? this.piecesIndex : (java.lang.Integer) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<WbOlpRawDataRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<WbOlpRawDataRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<WbOlpRawDataRecord>
    READER$ = (org.apache.avro.io.DatumReader<WbOlpRawDataRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










